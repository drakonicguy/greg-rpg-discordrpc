[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://dx54lbvrlmhrq"]

[ext_resource type="Script" path="res://shaders/scr_distortion_uv.gd" id="1_os0mr"]

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_j78ta"]
default_input_values = [1, 2, 2, 2, 3, 2, 4, 2]
initialized = true
script = ExtResource("1_os0mr")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_gpc5s"]
source = 2

[resource]
code = "shader_type canvas_item;


// DistortionUV

vec2 _distortionUV(vec2 _distortion_uv, vec2 _distortion_vect, vec2 _distortion_wave_vect) {
	_distortion_uv.x += sin(_distortion_uv.y * _distortion_wave_vect.x) * _distortion_vect.x;
	_distortion_uv.y += sin(_distortion_uv.x * _distortion_wave_vect.y) * _distortion_vect.y;
	return _distortion_uv;
}


void fragment() {
	vec2 n_out2p0;
// DistortionUV:2
	int n_in2p1 = 2;
	int n_in2p2 = 2;
	int n_in2p3 = 2;
	int n_in2p4 = 2;
	{
		n_out2p0.xy = _distortionUV(UV.xy, vec2(n_in2p3, n_in2p4), vec2(n_in2p1, n_in2p2));
	}


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(TEXTURE, n_out2p0);


// Output:0
	COLOR.rgb = vec3(n_out3p0.xyz);


}
"
graph_offset = Vector2(-191.159, 95.5072)
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeCustom_j78ta")
nodes/fragment/2/position = Vector2(-20, 140)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_gpc5s")
nodes/fragment/3/position = Vector2(160, 140)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 3, 0, 0, 0)
